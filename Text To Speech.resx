<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="listen.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAzxJREFUWEfV
        l1vITlkYx7fzeeLOBTNSJjQhhmLMNJNEGbnghnLh2ggJkcG9w5WbUQ7jUONGOebGIeUsJDQ1M8o5KVHI
        hOH32+/eb+tb1n7f9/ualH/9etez97OeZx/WXs/zZp+LBsKg2jA7DH/BMBgPr+Ax9IapsAXmwf+iznAU
        3sJYGAPv4Q6odaB9MreybBdon8mtLPsFpteG7dNg6AMTwICPoBOsKuzfQJ0H7RXgeZ+E9q+g7oP297nV
        onysl2vD+h3uyK0sOw3aF2EZ+GS0z8HmYizjYHQxfgE9YDYYu6GGw1OI7/A2mOBNYTfD13awGPur9oOx
        zZFUd7gOTroHW6G8wxJfxU5YBLPgpwLHHvOcPuEc18tGeF7Y5jDXR1oK4cSQv2EOdIFm0kfffyAVS8zV
        Rt3gIaScj0E/aK+c49xUzAdgzrpmQsrxKvh9d1TOvQap2D9DXS662OE/mAgpuR+4uBbmVmNNAmPF8cuF
        nusGxA7lZpJSeMF7oBc0krHC2GLOXL6L1Oe1HKr0O4S+l6DcqlNyowr9xZz5OhhSHIj5EaoUX4D4+fm4
        UzJW7C/mzr4NDoR8BVXaC6k5r2EBxKq6SXfM7IfgQEh/qFJZdFK44FZDqAGQ8s1rREcuYDek5pSsh1DG
        SvnlF2CBSJ20Ilap6hW4sCxSsb6ElH9enIYGB0ImQ5VSF2ChmQYpeaexv5g7Lwxx0ZElUKX4K7gFdkhV
        MlboL+asF6U/IXY4DlXaBqWfLdoX0EgnIIwt5qxrO8QO78CmIiUX7imw87FtayS3bWPF8c1Zl91K7CBu
        oW2qVjvl3NQ2LOasqyc8gZTjH5BsIJrIOc5NxTSXOdvIx5lylitg59Oq9HVOKpasgY9k7bbf18GWzIoX
        fx03wfbKvv87+KbAscc8p084x5ZsA5QtmTkqq6d780uIm1Lbq03QalN6BA4U40OgbErtkPP9v5GmgHeh
        1oJB4rb8AsRtuRfoWCxwo4px2ZbPBWO3pBHg/l1u0x39Y+Kr1G45cSy/ce/WIOFfs7ug4r9m5Q55Nrey
        bCXMh2Z7RVONhK9rw/y7fgYuvvIJ/Qt2wTNgHyyGT6a+0LU2bK+y7AOqpa94hYqQnQAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>